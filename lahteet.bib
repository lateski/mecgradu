@article{RefWorks:doc:5a65a2cee4b0cb152cfb50e7,
	author={M. Satyanarayanan},
	year={2001},
	month={August},
	title={Pervasive computing: vision and challenges},
	journal={IEEE Personal Communications},
	volume={8},
	number={4},
	pages={10-17},
	abstract={This article discusses the challenges in computer systems research posed by the emerging field of pervasive computing. It first examines the relationship of this new field to its predecessors: distributed systems and mobile computing. It then identifies four new research thrusts: effective use of smart spaces, invisibility, localized scalability, and masking uneven conditioning. Next, it sketches a couple of hypothetical pervasive computing scenarios, and uses them to identify key capabilities missing from today's systems. The article closes with a discussion of the research necessary to develop these capabilities},
	isbn={1070-9916},
	doi={10.1109/98.943998}
}
@article{RefWorks:doc:59d4bc53e4b08398efcd1d70,
	author={Y. Mao and C. You and J. Zhang and K. Huang and K. B. Letaief},
	year={2017},
	title={A Survey on Mobile Edge Computing: The Communication Perspective},
	journal={IEEE Communications Surveys Tutorials},
	volume={PP},
	number={99},
	pages={1-1},
	abstract={Driven by the visions of Internet of Things and 5G communications, recent years have seen a paradigm shift in mobile computing, from the centralized Mobile Cloud Computing towards Mobile Edge Computing (MEC). The main feature of MEC is to push mobile computing, network control and storage to the network edges (e.g., base stations and access points) so as to enable computation-intensive and latency-critical applications at the resource-limited mobile devices. MEC promises dramatic reduction in latency and mobile energy consumption, tackling the key challenges for materializing 5G vision. The promised gains of MEC have motivated extensive efforts in both academia and industry on developing the technology. A main thrust of MEC research is to seamlessly merge the two disciplines of wireless communications and mobile computing, resulting in a wide-range of new designs ranging from techniques for computation offloading to network architectures. This paper provides a comprehensive survey of the state-of-the-art MEC research with a focus on joint radio-and-computational resource management. We also discuss a set of issues, challenges and future research directions for MEC research, including MEC system deployment, cache-enabled MEC, mobility management for MEC, green MEC, as well as privacy-aware MEC. Advancements in these directions will facilitate the transformation of MEC from theory to practice. Finally, we introduce recent standardization efforts on MEC as well as some typical MEC application scenarios.},
	doi={10.1109/COMST.2017.2745201}
}
@article{RefWorks:doc:59d4bb5de4b015703b8822bc,
	author={Pavel Mach and Zdenek Becvar},
	year={2017},
	title={Mobile Edge Computing: A Survey on Architecture and Computation Offloading},
	journal={IEEE Communications Surveys & Tutorials},
	volume={19},
	number={3},
	pages={1628-1656},
	abstract={Technological evolution of mobile user equipment (UEs), such as smartphones or laptops, goes hand-in-hand with evolution of new mobile applications. However, running computationally demanding applications at the UEs is constrained by limited battery capacity and energy consumption of the UEs. A suitable solution extending the battery life-time of the UEs is to offload the applications demanding huge processing to a conventional centralized cloud. Nevertheless, this option introduces significant execution delay consisting of delivery of the offloaded applications to the cloud and back plus time of the computation at the cloud. Such a delay is inconvenient and makes the offloading unsuitable for real-time applications. To cope with the delay problem, a new emerging concept, known as mobile edge computing (MEC), has been introduced. The MEC brings computation and storage resources to the edge of mobile network enabling it to run the highly demanding applications at the UE while meeting strict delay requirements. The MEC computing resources can be exploited also by operators and third parties for specific purposes. In this paper, we first describe major use cases and reference scenarios where the MEC is applicable. After that we survey existing concepts integrating MEC functionalities to the mobile networks and discuss current advancement in standardization of the MEC. The core of this survey is, then, focused on user-oriented use case in the MEC, i.e., computation offloading. In this regard, we divide the research on computation offloading to three key areas: 1) decision on computation offloading; 2) allocation of computing resource within the MEC; and 3) mobility management. Finally, we highlight lessons learned in area of the MEC and we discuss open research challenges yet to be addressed in order to fully enjoy potentials offered by the MEC.},
	language={English},
	url={http://ieeexplore.ieee.org/document/7879258},
	doi={10.1109/COMST.2017.2682318}
}
@inproceedings{RefWorks:doc:59d4bac0e4b015703b88228c,
	author={G. Avino and M. Malinverno and F. Malandrino and C. Casetti and C. F. Chiasserini},
	year={2017},
	title={Characterizing Docker Overhead in Mobile Edge Computing Scenarios},
	publisher={ACM},
	address={New York, NY, USA},
	pages={30–35},
	abstract={Mobile Edge Computing (MEC) is an emerging network paradigm that provides cloud and IT services at the point of access of the network. Such proximity to the end user translates into ultra-low latency and high bandwidth, while, at the same time, it alleviates traffic congestion in the network core. Due to the need to run servers on edge nodes (e.g., an LTE-A macro eNodeB), a key element of MEC architectures is to ensure server portability and low overhead. A possible tool that can be used for this purpose is Docker, a framework that allows easy, fast deployment of Linux containers. This paper addresses the suitability of Docker in MEC scenarios by quantifying the CPU consumed by Docker when running two different containerized services: multiplayer gaming and video streaming. Our tests, run with varying numbers of clients and servers, yield different results for the two case studies: for the gaming service, the overhead logged by Docker increases only with the number of servers; conversely, for the video streaming case, the overhead is not affected by the number of either clients or servers.},
	url={http://doi.acm.org/10.1145/3094405.3094411},
	doi={10.1145/3094405.3094411}
}
@inproceedings{RefWorks:doc:59d4b914e4b015703b8821bc,
	author={Francesco Malandrino and Scott Kirkpatrick and Carla-Fabiana Chiasserini},
	year={2016},
	title={How Close to the Edge?: Delay/Utilization Trends in MEC},
	publisher={ACM},
	address={New York, NY, USA},
	pages={37–42},
	abstract={Virtually all of the rapidly increasing data traffic consumed by mobile users requires some kind of processing, normally performed at cloud servers. A recent thrust, mobile edge computing, moves such processing to servers within the cellular mobile network. The large temporal and spatial variations to which mobile data usage is subject could make the reduced latency that edge clouds offer come at an unacceptable cost in redundant and underutilized infrastructure. We present some first empirical results on this question, based on large scale sampled crowd-sourced traces from several major cities spanning multiple operators and identifying the applications in use. We find opportunities to obtain both high server utilization and low application latency, but the best approaches will depend on the individual network operator's deployment strategy and geographic specifics of the cities we study.},
	url={http://doi.acm.org/10.1145/3010079.3010080},
	doi={10.1145/3010079.3010080}
}
@inproceedings{RefWorks:doc:59d4b224e4b015703b881ab9,
	author={Mathieu Bouet and Vania Conan},
	year={2017},
	title={Geo-partitioning of MEC Resources},
	publisher={ACM},
	address={New York, NY, USA},
	pages={43–48},
	abstract={Mobile Edge Computing (MEC) is an emerging technology that aims at pushing applications and content close to the users (e.g. at base stations, access points, aggregation networks) to reduce latency, improve quality of experience, and ensure highly efficient network operation and service delivery It principally relies on virtualization-enabled MEC servers with limited capacity at the edge of the network. One key issue is to dimension such systems in terms of server size, server number and server operation area to meet MEC goals. In this paper, we propose a graph-based algorithm that, taking into account a maximum MEC server capacity, provides a partition of MEC clusters, which consolidates as many communications as possible at the edge. We use a dataset of mobile communications to evaluate it with real world spatio-temporal human dynamics. In addition to quantifying macroscopic MEC benefits, the evaluation shows that our algorithm provides MEC area partitions that largely offload the core, thus pushing the load at the edge (e.g., with 10 small MEC servers around 55% of the traffic stay at the edge), and that are well balanced through time.},
	url={http://doi.acm.org/10.1145/3098208.3098216},
	doi={10.1145/3098208.3098216}
}
